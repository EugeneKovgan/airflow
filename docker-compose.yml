version: '3.9'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow_network

  webserver:
    build: .
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
      - AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL=30
      - MONGO_URL=${MONGO_URL}
      - MONGO_DBNAME=${MONGO_DBNAME}
      - TIKAPI_KEY=${TIKAPI_KEY}
      - TIKAPI_AUTHKEY=${TIKAPI_AUTHKEY}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./.env:/opt/airflow/.env
    command: bash -c "airflow db init && airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email admin@example.com && airflow webserver"
    networks:
      - airflow_network

  scheduler:
    build: .
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      - AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL=30
      - MONGO_URL=${MONGO_URL}
      - MONGO_DBNAME=${MONGO_DBNAME}
      - TIKAPI_KEY=${TIKAPI_KEY}
      - TIKAPI_AUTHKEY=${TIKAPI_AUTHKEY}
    depends_on:
      - postgres
      - webserver
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./.env:/opt/airflow/.env
    command: bash -c "airflow scheduler"
    networks:
      - airflow_network

networks:
  airflow_network:

volumes:
  postgres_data:
